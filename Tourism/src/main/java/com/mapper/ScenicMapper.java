package com.mapper;

import com.entity.PageQueryVo;
import com.entity.Scenic;
import java.util.List;

import org.apache.ibatis.annotations.Param;

public interface ScenicMapper extends BaseMapper<Scenic> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long scenicId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic
     *
     * @mbggenerated
     */
    int insert(Scenic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic
     *
     * @mbggenerated
     */
    Scenic selectByPrimaryKey(Long scenicId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic
     *
     * @mbggenerated
     */
    List<Scenic> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenic
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Scenic record);

    /**
     * 获取用户收藏景点的记录条数
     * @param userId
     * @param scenic
     * @return
     */
	int recordCollCountByUserId(@Param("userId")Long userId, @Param("t")Scenic scenic);

	/**
	 * 获取用户收藏景点
	 * @param userId
	 * @param scenic
	 * @param vo
	 * @return
	 */
	List<Scenic> selectCollByByUserId(@Param("userId")Long userId, @Param("t")Scenic scenic, @Param("vo")PageQueryVo vo);
	
	/**
	 * 获取用户拼评论过的景点的记录数
	 * @param userId
	 * @return
	 */
	int recordSceCountByUserId(@Param("userId")Long userId);
	
	/**
	 * 获取用户拼评论过的景点
	 * @param userId
	 * @param scenic
	 * @param vo
	 * @return
	 */
	List<Scenic> selectSceByUserId(@Param("userId")Long userId, @Param("vo")PageQueryVo vo);

	/**
	 * 更新景点门票
	 * @param scenicId
	 * @param count
	 */
	void updateTicket(@Param("scenicId")Long scenicId, @Param("count")int count);

	/**
	 * 获取购买过门票的景点的记录数
	 * @param userId
	 * @return
	 */
	int ticketSceRecordCount(Long userId);

	/**
	 * 获取购买过门票的景点
	 * @param userId
	 * @param vo
	 * @return
	 */
	List<Scenic> ticketSceRecord(@Param("userId")Long userId, @Param("vo")PageQueryVo vo);
	
}