<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="del" jdbcType="INTEGER" property="del" />
  </resultMap>
  
  <resultMap id="UserResultMap" type="com.entity.User" extends="BaseResultMap">
  	<collection property="scenicCollect" ofType="com.entity.Collect" column="user_id" select="com.mapper.CollectMapper.selectByUserId">
  		<id column="user_id" jdbcType="BIGINT" property="userId" />
	    <id column="scenic_id" jdbcType="BIGINT" property="scenicId" />
	    <result column="datetime" jdbcType="TIMESTAMP" property="datetime" />
	    <result column="del" jdbcType="INTEGER" property="del" />
  	</collection>
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="userId" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (username, password, sex, phone, state)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, username, password, sex, phone, state, create_time, update_time, del 
    from user
    where user_id = #{userId,jdbcType=BIGINT} 
    order by update_time desc
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, username, password, sex, phone, state, create_time, update_time, del 
    from user 
    order by update_time desc
  </select>
  
  
  
  <select id="selectByPage" resultMap="BaseResultMap">
  	select user_id, username, password, sex, phone, state, create_time, update_time, del
    from user
    where del = 0
    order by update_time desc
    limit #{start}, #{size}
  </select>
  
  <select id="selectByMulCondition" resultMap="BaseResultMap">
  	select user_id, username, password, sex, phone, state, create_time, update_time, del
  	from user
  	where del = 0 
  		  <if test="t.username != null and t.username != '' "> and username like concat('%', #{t.username}, '%') </if>  
  		  <if test="t.sex != null "> and sex = #{t.sex} </if>
  		  <if test="t.state != null "> and state = #{t.state} </if>
  		  <if test="t.phone != null and t.phone != '' "> and phone like concat('%', #{t.phone}, '%') </if>
  	order by update_time desc
  	limit #{vo.start}, #{vo.size}
  </select>
  
  <select id="selectByEntity" parameterType="com.entity.User" resultMap="BaseResultMap">
  	select user_id, username, create_time
  	from user
  	where del = 0
  	<if test="username != null"> and username = #{username}</if>  
  	<if test="password != null"> and password = #{password} </if>
  </select>
  
  <select id="recordCount" parameterType="com.entity.User" resultType="int">
  	select count(*) 
  	from user
  	where del = 0 
  		  <if test="username != null and username != '' "> and username like concat('%', #{username}, '%') </if>  
  		  <if test="sex != null "> and sex = #{sex} </if>
  		  <if test="state != null "> and state = #{state} </if>
  		  <if test="phone != null and phone != '' "> and phone like concat('%', #{phone}, '%') </if>
  </select>
  
  <delete id="del">
  	update user set del=1 where user_id = #{userId};
  </delete>
  
</mapper>